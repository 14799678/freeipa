#! /usr/bin/python -E
# Authors: Rob Crittenden <rcritten@redhat.com>
#
# Copyright (C) 2007  Red Hat
# see file 'COPYING' for use and warranty information
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; version 2 only
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
import sys
try:
    from optparse import OptionParser
    import ipa
    import ipa.ipaclient as ipaclient
    import ipa.config
    import ipa.ipautil as ipautil
    import errno
    import socket

    import xmlrpclib
    import kerberos
except ImportError:
    print >> sys.stderr, """\
There was a problem importing one of the required Python modules. The
error was:

    %s
""" % sys.exc_value
    sys.exit(1)

def usage():
    print "ipa-delgroup [-v|--verbose] group"
    sys.exit(1)

def parse_options():
    parser = OptionParser()
    parser.add_option("--usage", action="store_true",
                      help="Program usage")
    parser.add_option("-v", "--verbose", action="store_true", dest="verbose",
                      help="Verbose output of the XML-RPC connection")

    args = ipa.config.init_config(sys.argv)
    options, args = parser.parse_args(args)

    return options, args

def main():
    options, args = parse_options()

    if options.usage or len(args) != 2:
        usage()

    client = ipaclient.IPAClient(verbose=options.verbose)
    groups = client.find_groups(args[1], ['cn','description','gidnumber','nsAccountLock'])

    counter = groups[0]
    groups = groups[1:] 

    if counter == 0:
        print "Group '%s' not found." % args[1]
        return 2
    if counter != 1:
        print "An exact group match was not found. Found %d groups" % counter
        return 2

    ret = client.delete_group(groups[0].dn)
    if (ret == "Success"):
        print args[1] + " successfully deleted"
    else:
        print args[1] + " " + ret

    return 0

try:
    if __name__ == "__main__":
        sys.exit(main())
except SystemExit, e:
    sys.exit(e)
except KeyboardInterrupt, e:
    sys.exit(1)
except xmlrpclib.Fault, fault:
    if fault.faultCode == errno.ECONNREFUSED:
        print "The IPA XML-RPC service is not responding."
    else:
        print fault.faultString
    sys.exit(1)
except kerberos.GSSError, e:
    print "Could not initialize GSSAPI: %s/%s" % (ipautil.get_gsserror(e))
    sys.exit(1)
except xmlrpclib.ProtocolError, e:
    print "Unable to connect to IPA server: %s" % (e.errmsg)
    sys.exit(1)
except ipa.ipaerror.IPAError, e:
    print "%s" % (e.message)
    sys.exit(1)
except socket.error, e:
    print e[1]
    print "Re-run with -v flag for more details."
except Exception, e:
    print "%s" % str(e)
    sys.exit(1)
