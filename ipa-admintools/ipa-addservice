#! /usr/bin/python -E
# Authors: Karl MacMillan <kmacmill@redhat.com>
#
# Copyright (C) 2007  Red Hat
# see file 'COPYING' for use and warranty information
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; version 2 only
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
import sys
try:
    from optparse import OptionParser
    import ipa
    import ipa.user
    import ipa.ipaclient as ipaclient
    import ipa.ipautil as ipautil
    import ipa.config

    import base64

    import xmlrpclib
    import kerberos
    import krbV
    import ldap
    import getpass
    import errno
    import socket
except ImportError:
    print >> sys.stderr, """\
There was a problem importing one of the required Python modules. The
error was:

    %s
""" % sys.exc_value
    sys.exit(1)

def parse_options():
    usage = "%prog [options] principal"
    parser = OptionParser(usage=usage)

    parser.add_option("--force", action="store_true", default=False,
                      help="Force a service principal name")
    parser.add_option("-v", "--verbose", action="store_true", dest="verbose",
                      help="Verbose output of the XML-RPC connection")

    ipa.config.add_standard_options(parser)
    options, args = parser.parse_args()
    ipa.config.verify_args(parser, args, "principal")
    ipa.config.init_config(options)

    return options, args

def main():
    # The following fields are required
    princ_name = ""

    options, args = parse_options()

    princ_name = args[0]

    client = ipaclient.IPAClient(verbose=options.verbose)

    client.add_service_principal(princ_name, "%d" % options.force)

    return 0

try:
    if __name__ == "__main__":
        sys.exit(main())
except SystemExit, e:
    sys.exit(e)
except KeyboardInterrupt, e:
    sys.exit(1)
except xmlrpclib.Fault, fault:
    if fault.faultCode == errno.ECONNREFUSED:
        print "The IPA XML-RPC service is not responding."
    else:
        print fault.faultString
    sys.exit(1)
except kerberos.GSSError, e:
    print "Could not initialize GSSAPI: %s/%s" % (ipautil.get_gsserror(e))
    sys.exit(1)
except xmlrpclib.ProtocolError, e:
    print "Unable to connect to IPA server: %s" % (e.errmsg)
    sys.exit(1)
except ipa.ipaerror.IPAError, e:
    print "%s" % (e.msg)
    sys.exit(1)
except socket.error, e:
    print e[1]
    print "Re-run with -v flag for more details."
except Exception, e:
    print "%s" % str(e)
    sys.exit(1)
